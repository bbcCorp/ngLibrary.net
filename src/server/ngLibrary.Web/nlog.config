<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="Warn"
      internalLogFile="${environment:NGLIBRARY_NLOG_FOLDER}/internal-nlog.txt">

  <!-- Load the ASP.NET Core plugin -->
  <extensions>
    <add assembly="NLog.Web.AspNetCore"/>
  </extensions>

  <!-- Change this as per the deployment environment -->
  <variable name="dbConnectionStr" value="${environment:NGLIBRARY_ConnectionStrings__ngLibraryDbConnection}"/>

  <!-- the targets to write to -->
  <targets>
     <target  name="db"
              xsi:type="Database"
              dbProvider="Npgsql.NpgsqlConnection, Npgsql"
              connectionString="${dbConnectionStr}"
        >

        <commandText>
              insert into nglib.nlog (
              application, logged, level, message,
              logger, callsite, exception,
              machinename, sitename,username, properties, serverName, url,  port, https, serverAddress, remoteAddress
              ) values (
              @Application, @Logged, @Level, @Message,
              @Logger, @Callsite, @Exception,
              @MachineName,@SiteName,@Username, @Properties,@ServerName, @url, @Port, @Https, @ServerAddress, @RemoteAddress
              );
        </commandText>

        <parameter name="@application"     layout="AspNetCoreNlog" />
        <parameter name="@machineName"    layout="${machinename}" />
        <parameter name="@siteName"       layout="${iis-site-name}" />
        <parameter name="@logged"         layout="${date}" />
        <parameter name="@level"          layout="${level}" />
        <parameter name="@username"       layout="${aspnet-user-identity}" />
        <parameter name="@message"        layout="${message}" />
        <parameter name="@logger"         layout="${logger}" />
        <parameter name="@properties"     layout="${all-event-properties:separator=|}" />
        <parameter name="@serverName"     layout="${aspnet-request:serverVariable=SERVER_NAME}" />
        <parameter name="@port"           layout="${aspnet-request:serverVariable=SERVER_PORT}" />
        <parameter name="@url"            layout="${aspnet-request:serverVariable=HTTP_URL}" />
        <parameter name="@https"          layout="${when:inner=1:when='${aspnet-request:serverVariable=HTTPS}' == 'on'}${when:inner=0:when='${aspnet-request:serverVariable=HTTPS}' != 'on'}" />
        <parameter name="@serverAddress"  layout="${aspnet-request:serverVariable=LOCAL_ADDR}" />
        <parameter name="@remoteAddress"  layout="${aspnet-request:serverVariable=REMOTE_ADDR}:${aspnet-request:serverVariable=REMOTE_PORT}" />
        <parameter name="@callSite"       layout="${callsite}" />
        <parameter name="@exception"      layout="${exception:tostring}" />

     </target>

     <!-- write logs to file -->
     <target  name="nglib-all-logs"
              xsi:type="File"
              fileName="${environment:NGLIBRARY_NLOG_FOLDER}/nglib-all-${shortdate}.log"
              layout="${longdate}|${event-properties:item=EventId.Id}|${logger}|${uppercase:${level}}|${message} ${exception}" />

      <!-- another file log, only own logs. Uses some ASP.NET core renderers -->
     <target
            name="nglib-app-logs"
            xsi:type="File"
            fileName="${environment:NGLIBRARY_NLOG_FOLDER}/nglib-app-${shortdate}.log"
            layout="${longdate}|${event-properties:item=EventId.Id}|${logger}|${uppercase:${level}}|  ${message} ${exception}|url: ${aspnet-request-url}|action: ${aspnet-mvc-action}" />

     <!-- write to the void aka just remove -->
    <target xsi:type="Null" name="blackhole" />
  </targets>

  <!-- rules to map from logger name to target -->
  <rules>

    <!-- DB Logs  -->
    <logger name="ngLibrary.*" minlevel="${environment:NGLIBRARY_Logging__LogLevel__Default}" writeTo="db" />
    <logger name="Microsoft.*" minlevel="${environment:NGLIBRARY_Logging__LogLevel__Microsoft}" writeTo="db" />
    <logger name="*" minlevel="${environment:NGLIBRARY_Logging__LogLevel__System}" writeTo="db" />

    <!-- File based logs -->
    <logger name="ngLibrary.*" minlevel="${environment:NGLIBRARY_Logging__LogLevel__Default}" writeTo="nglib-app-logs" />
    <logger name="Microsoft.*" minlevel="${environment:NGLIBRARY_Logging__LogLevel__Microsoft}" writeTo="nglib-all-logs" />
    <logger name="*" minlevel="${environment:NGLIBRARY_Logging__LogLevel__System}" writeTo="nglib-all-logs" />
  </rules>
</nlog>
